This is where we left off in the last lesson.

Three Principles of Redux
Single Source of Truth
State is Read-Only
Changes are made with pure functions
Foundation of Redux:

Store
Actions
Reducers
Actions
Actions describe the users' actions on the data in the app. We can change the state in the store by dispatching actions. Those actions will go through the reducers, and the reducers will return the new state. Actions must have a type property.

Action Creators
Action Creators are functions that create the action objects.

Reducers
Reducers are pure functions. Reducers

specify how the application's state changes in response to actions sent to the store.

Redux Middleware
provides a third-party extension point between dispatching an action, and the moment it reaches the reducer. People use Redux middleware for logging, crash reporting, talking to an asynchronous API, routing, and more.

The Store
The store has 3 methods on it:

getState() - used to get the current state from the store
subscribe() - used to provide a listener function the store will call when the state changes
dispatch() - used to make changes to the store's state